{"version":3,"file":"static/js/653.c982ae84.chunk.js","mappings":"0NACA,EAAyB,uB,SC4EzB,EAtEe,WACX,OAA4BA,EAAAA,EAAAA,UAAS,CAAC,GAAtC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,IAAgB,IAAxD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAgCL,EAAAA,EAAAA,UAAS,IAAzC,eAAOM,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MA4CjB,OApBAC,EAAAA,EAAAA,YAAU,WACU,OAAbJ,GAAkC,KAAbA,GAKbK,MAAM,qDAAD,OApCZ,mCAoCY,kBAAmEL,IAC9EM,MAAK,SAAAC,GAAI,OAAIA,EAAKC,MAAT,IACTF,MAAK,SAAAG,GACyB,IAAxBA,EAAKC,QAAQC,OAIhBf,EAAUa,EAAKC,SAHXE,MAAM,sDAIb,IACEC,OAAM,SAAAC,GAAK,OAAIF,MAAME,EAAV,GAGrB,GAAE,CAACd,KAGA,kBAAMe,UAAWC,EAAjB,WACI,6BACA,kBAAOC,KAAK,OAAOC,MAAOpB,EAAaqB,IAAI,YAAcrB,EAAaqB,IAAI,YAAc,GAAIC,SAAU,SAAAC,GAAC,OAAItB,EAAgB,CAAEC,SAAUqB,EAAEC,OAAOJ,OAAzC,KACvG,mBAAQK,QA9CK,SAACF,GAGlB,GAFAA,EAAEG,iBAEkC,OAAjC1B,EAAaqB,IAAI,cAChBlB,EAAYH,EAAaqB,IAAI,YAAYM,QAEE,KAAxC3B,EAAaqB,IAAI,YAAYM,QAAyD,OAAxC3B,EAAaqB,IAAI,YAAYM,QAM1E,OALAb,MAAM,4BACNhB,EAAU,SACY,KAAnByB,EAAEC,OAAOJ,OACRnB,EAAgB,CAAC,GAUhC,EA0BO,uBAGEJ,EAAOgB,OAAS,IAClB,wBACEhB,EAAO+B,KAAI,SAAAC,GACX,OAAQ,yBACN,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAKE,IAAMC,MAAO,CAAEC,KAAM7B,GAA/C,SAA4DyB,EAAKK,SADlDL,EAAKE,GAEb,MAGS,IAAlBlC,EAAOgB,SACL,iFAIf,C","sources":["webpack://goit-react-hw-05-movies/./src/components/Movies/Movies.module.css?9f30","components/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Movies\":\"Movies_Movies__aJ6Ku\"};","import { useState, useEffect } from \"react\";\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from './Movies.module.css';\n\nconst KEY = '115673062d9a805a3df250beb0ca2927';\n\nconst Movies = () => {\n    const [movies, setMovies] = useState({});\n    const [searchParams, setSearchParams] = useSearchParams('');\n    const [moviesId, setMoviesId] = useState('');\n    const location = useLocation();\n\n    const searchMovies = (e) => {\n        e.preventDefault();\n\n        if(searchParams.get('moviesId') !== null) {\n            setMoviesId(searchParams.get('moviesId').trim());\n\n            if(searchParams.get('moviesId').trim() === '' || searchParams.get('moviesId').trim() === null) {\n                alert('please enter name movies');\n                setMovies([]);\n                if(e.target.value === '') {\n                    setSearchParams({});\n                 }\n                return;\n            }\n        }\n\n                \n\n\n        \n    }\n\n    useEffect(() => {\n        if(moviesId === null || moviesId === '') {\n            return\n        }\n\n        function fetchData() {\n            return fetch(`https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${moviesId}`)\n            .then(resp => resp.json())\n            .then(data => {\n                if(data.results.length === 0) {\n                    alert('Not found movies with this name! Please, try again.');\n                    return;\n                }\n                setMovies(data.results);\n            })\n              .catch(erorr => alert(erorr));\n          }\n          fetchData();\n    }, [moviesId]);   \n    \n    return (\n        <main className={css.Movies}>\n            <form>\n            <input type=\"text\" value={searchParams.get('moviesId') ? searchParams.get('moviesId') : ''} onChange={e => setSearchParams({ moviesId: e.target.value})}/>\n            <button onClick={searchMovies}>Search</button>\n            </form>\n            \n            { movies.length > 0 &&\n            <ul>\n            { movies.map(item => \n            { return (<li key={item.id}>\n                <Link to={`/movies/${item.id}`} state={{ from: location }}>{item.title}</Link>\n                </li>)}\n            )}\n            </ul>}\n            { movies.length === 0 &&\n                <p>Not found movies with this name! Please, try again.</p>\n            }\n        </main>\n    )\n}\n\nexport default Movies;\n\nMovies.propTypes = {\n    state: PropTypes.arrayOf(PropTypes.exact({\n        searchParams: PropTypes.string,\n        movies: PropTypes.array,\n        moviesId: PropTypes.number,\n    }))\n}"],"names":["useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","moviesId","setMoviesId","location","useLocation","useEffect","fetch","then","resp","json","data","results","length","alert","catch","erorr","className","css","type","value","get","onChange","e","target","onClick","preventDefault","trim","map","item","to","id","state","from","title"],"sourceRoot":""}