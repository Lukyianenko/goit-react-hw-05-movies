{"version":3,"file":"static/js/653.e85e00f0.chunk.js","mappings":"qPACA,EAAyB,uB,SCiEzB,EA3De,WAAO,IAAD,EACjB,GAA4BA,EAAAA,EAAAA,UAAS,CAAC,GAAtC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,IAAgB,IAAxD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BL,EAAAA,EAAAA,UAAS,IAAnC,eAAOM,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACbC,EAAK,UAAGN,EAAaO,IAAI,mBAApB,QAAmC,GAErCC,EAAkB,mCAAG,WAAOC,GAAP,iEACxBA,EAAEC,iBACW,KAAVR,GACCD,EAAgB,CAACU,SAAUT,IAC3BI,EAAQN,EAAaO,IAAI,aAEzBK,MAAM,4BANc,2CAAH,sDA8BzB,OApBAC,EAAAA,EAAAA,YAAU,WACO,KAAVP,IAEHH,EAASG,GAEEQ,MAAM,qDAAD,OAxBZ,mCAwBY,kBAAmER,IAC9ES,MAAK,SAAAC,GAAI,OAAIA,EAAKC,MAAT,IACTF,MAAK,SAAAG,GACF,GAA2B,IAAxBA,EAAKC,QAAQC,OAGZ,OAFAR,MAAM,4DACNd,EAAU,IAGdA,EAAUoB,EAAKC,QAClB,IACEE,OAAM,SAAAC,GAAK,OAAIV,MAAMU,EAAV,IAGrB,GAAE,CAAChB,KAGA,kBAAMiB,UAAWC,EAAjB,WACI,kBAAMC,SAAUjB,EAAhB,WACA,kBAAOkB,KAAK,OAAOxB,MAAOA,EAAOyB,SAAU,SAAAlB,GAAC,OAAIN,EAASM,EAAEmB,OAAO1B,MAAtB,KAC5C,mBAAQwB,KAAK,SAAb,uBAGE7B,EAAOuB,OAAS,IAClB,wBACEvB,EAAOgC,KAAI,SAAAC,GACX,OAAQ,yBACN,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAKE,IAAMC,MAAO,CAAEC,KAAM9B,GAA/C,SAA4D0B,EAAKK,SADlDL,EAAKE,GAEb,MAGS,IAAlBnC,EAAOuB,SACL,iFAIf,C,sBChED,SAASgB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBzC,EAAQ0C,EAAK1C,KAInB,CAHE,MAAO2C,GAEP,YADAN,EAAOM,EAET,CAEID,EAAKE,KACPR,EAAQpC,GAER6C,QAAQT,QAAQpC,GAAOa,KAAKyB,EAAOC,EAEvC,CAEe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GAEzB,SAASZ,EAAMtC,GACbkC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQvC,EAClE,CAEA,SAASuC,EAAOc,GACdnB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASc,EACnE,CAEAf,OAAMgB,EACR,GACF,CACF,C","sources":["webpack://goit-react-hw-05-movies/./src/components/Movies/Movies.module.css?9f30","components/Movies/Movies.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Movies\":\"Movies_Movies__aJ6Ku\"};","import { useState, useEffect } from \"react\";\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from './Movies.module.css';\n\nconst KEY = '115673062d9a805a3df250beb0ca2927';\n\nconst Movies = () => {\n    const [movies, setMovies] = useState({});\n    const [searchParams, setSearchParams] = useSearchParams('');\n    const [value, setValue] = useState('');\n    const location = useLocation();\n    let query = searchParams.get('moviesId') ?? '';\n    \n     const searchMoviesSubmit = async (e) => {\n        e.preventDefault();\n        if(value !== ''){\n            setSearchParams({moviesId: value});\n            query = searchParams.get('moviesId');\n        } else {\n            alert('please enter name movies');  \n        }\n    }\n\n    useEffect(() => {\n        if(query === '') return;\n\n        setValue(query);\n        function fetchData() {\n            return fetch(`https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${query}`)\n            .then(resp => resp.json())\n            .then(data => {\n                if(data.results.length === 0) {\n                    alert('Not found movies with this name! Please, try again.');\n                    setMovies([]);\n                    return;\n                }\n                setMovies(data.results);\n            })\n              .catch(erorr => alert(erorr));\n          }\n          fetchData();\n    }, [query]);   \n    \n    return (\n        <main className={css.Movies}>\n            <form onSubmit={searchMoviesSubmit}>\n            <input type=\"text\" value={value} onChange={e => setValue(e.target.value)}/>\n            <button type='submit'>Search</button>\n            </form>\n            \n            { movies.length > 0 &&\n            <ul>\n            { movies.map(item => \n            { return (<li key={item.id}>\n                <Link to={`/movies/${item.id}`} state={{ from: location }}>{item.title}</Link>\n                </li>)}\n            )}\n            </ul>}\n            { movies.length === 0 &&\n                <p>Not found movies with this name! Please, try again.</p>\n            }\n        </main>\n    )\n}\n\nexport default Movies;\n\nMovies.propTypes = {\n    state: PropTypes.arrayOf(PropTypes.exact({\n        searchParams: PropTypes.string,\n        movies: PropTypes.array,\n        moviesId: PropTypes.number,\n    }))\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","value","setValue","location","useLocation","query","get","searchMoviesSubmit","e","preventDefault","moviesId","alert","useEffect","fetch","then","resp","json","data","results","length","catch","erorr","className","css","onSubmit","type","onChange","target","map","item","to","id","state","from","title","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}