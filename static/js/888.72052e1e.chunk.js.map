{"version":3,"file":"static/js/888.72052e1e.chunk.js","mappings":"0NACA,EAA8B,kCAA9B,EAA+E,mCAA/E,EAAkI,oCAAlI,EAAiL,+B,SCmEjL,EA7DqB,WAAO,IAAD,IAMnBA,EALIC,GAAaC,EAAAA,EAAAA,MAAbD,SACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAoBhD,OAjBGT,IACHJ,EAAMc,KAAKC,MAA2B,GAArBX,EAAMY,gBAGvBC,EAAAA,EAAAA,YAAU,WAEKC,MAAM,sCAAD,OAAuCjB,EAAvC,oBAhBZ,qCAiBCkB,MAAK,SAAAC,GAAI,OAAIA,EAAKC,MAAT,IACTF,MAAK,SAAAG,GACFjB,EAASiB,GACTf,EAAS,kCAAD,OAAmCe,EAAKC,aACnD,IACEC,OAAM,SAAAC,GAAK,OAAIC,MAAMD,EAAV,GAGrB,GAAE,CAACxB,KAGI,4BACMG,IACF,iCACA,SAAC,KAAD,CAAMuB,GAAIjB,EAASkB,QAAnB,mBACF,qBAASC,UAAWC,EAApB,WACF,gBAAKC,IAAKzB,EAAO0B,IAAK5B,EAAM6B,MAAOJ,UAAWC,KAC9C,iBAAKD,UAAWC,EAAhB,WACA,wBAAK1B,EAAM6B,SACX,wCAAgBjC,EAAhB,SACA,sCACA,uBAAII,EAAM8B,YACV,oCACA,uBAAI9B,EAAM+B,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,eAG/C,iBAAKV,UAAWC,EAAhB,WACI,oDACA,2BACI,yBACI,SAAC,KAAD,CAAMH,GAAG,OAAT,qBAEJ,yBACI,SAAC,KAAD,CAAMA,GAAG,UAAT,iCAMZ,SAAC,EAAAa,SAAD,CAAUC,UAAU,wCAApB,UACA,SAAC,KAAD,QAIX,C","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"imageMovies\":\"MovieDetails_imageMovies__P1KeC\",\"sectionMovie\":\"MovieDetails_sectionMovie__jSu3X\",\"containerInfo\":\"MovieDetails_containerInfo__PGEqw\",\"contList\":\"MovieDetails_contList__wpgxZ\"};","import { useParams, Link, Outlet, useLocation } from \"react-router-dom\";\nimport { useState, useEffect, useRef, Suspense } from \"react\";\nimport PropTypes from 'prop-types';\nimport css from './MovieDetails.module.css';\n\nconst KEY = '115673062d9a805a3df250beb0ca2927';\n\nconst MovieDetails = () => {\n    const { moviesId } = useParams();\n    const [movie, setMovie] = useState(null);\n    const [image, setImage] = useState(null);\n    const location = useLocation();\n    const backLink = useRef(location.state?.from ?? '/movies');\n    let num;\n\n    if(movie){\n    num = Math.round(movie.vote_average * 10);\n    }\n\n    useEffect(() => {\n        function fetchData() {\n            return fetch(`https://api.themoviedb.org/3/movie/${moviesId}?api_key=${KEY}`)\n            .then(resp => resp.json())\n            .then(data => {\n                setMovie(data);\n                setImage(`https://image.tmdb.org/t/p/w500${data.poster_path}`);\n            })\n              .catch(erorr => alert(erorr));\n          }\n          fetchData();\n    }, [moviesId]);\n\n    return (\n            <main>\n                { movie &&\n                <>\n                <Link to={backLink.current}>Back</Link>\n              <section className={css.sectionMovie}>\n            <img src={image} alt={movie.title} className={css.imageMovies}/>\n            <div className={css.contList}>\n            <h2>{movie.title}</h2>\n            <p>User score: {num} %</p>\n            <h3>Overview</h3>\n            <p>{movie.overview}</p>\n            <h3>Genres</h3>\n            <p>{movie.genres.map(genre => genre.name).join(', ')}</p>\n            </div>\n            </section>\n            <div className={css.containerInfo}>\n                <h4>Additional information</h4>\n                <ul>\n                    <li>\n                        <Link to=\"cast\">Cast</Link>\n                    </li>\n                    <li>\n                        <Link to=\"reviews\">Reviews</Link>    \n                    </li>\n                </ul>\n            </div>\n            </>\n            }\n            <Suspense fallback={<div>Loading...</div>}>\n            <Outlet /> \n            </Suspense>\n        </main>\n    )\n}\n\nexport default MovieDetails;\n\nMovieDetails.propTypes = {\n    moviesId: PropTypes.number,\n    num: PropTypes.number,\n    state: PropTypes.arrayOf(PropTypes.exact({\n        movie: PropTypes.array,\n        image: PropTypes.string\n    }))\n}"],"names":["num","moviesId","useParams","useState","movie","setMovie","image","setImage","location","useLocation","backLink","useRef","state","from","Math","round","vote_average","useEffect","fetch","then","resp","json","data","poster_path","catch","erorr","alert","to","current","className","css","src","alt","title","overview","genres","map","genre","name","join","Suspense","fallback"],"sourceRoot":""}