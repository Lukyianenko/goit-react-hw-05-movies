{"version":3,"file":"static/js/76.6fc967b9.chunk.js","mappings":"2OACA,EAA4B,wBAA5B,EAAgE,wBAAhE,EAAiG,qBAAjG,EAAiI,uB,SCI3HA,EAAM,mCA8CZ,EA5Ca,WACT,IAAQC,GAAaC,EAAAA,EAAAA,MAAbD,SACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,8FACiBC,MAAM,sCAAD,OAAuCN,EAAvC,4BAAmED,IACpFQ,MAAK,SAAAC,GAAI,OAAIA,EAAKC,MAAT,IACTF,MAAK,SAAAG,GACFN,EAASM,EAAKC,KACjB,IACEC,OAAM,SAAAC,GAAK,OAAIC,MAAMD,EAAV,IANlB,oFADY,uBAAC,WAAD,wBASVE,EACL,GAAE,CAACf,KAIA,yBACKG,IACD,eAAIa,UAAWC,EAAf,SAEMd,EAAMe,KAAI,SAAAC,GACR,IAAIC,EAIJ,OAHGD,EAAKE,eACJD,EAAK,0CAAsCD,EAAKE,gBAGhD,gBAAkBL,UAAWC,EAA7B,WACI,gBAAKD,UAAWC,EAAhB,UACA,gBAAKK,IAAKF,EAAOG,IAAKJ,EAAKK,cAAeR,UAAWC,OAG7D,uBAAIE,EAAKK,iBACT,uCAAeL,EAAKM,eANPN,EAAKO,GASnB,OAKlB,C,sBCjDD,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAO7B,KAAKwB,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"itemActor\":\"Cast_itemActor__WcFnk\",\"actorList\":\"Cast_actorList__0r4HV\",\"imgNot\":\"Cast_imgNot__g7vhg\",\"imgActor\":\"Cast_imgActor__aAhnw\"};","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport css from './Cast.module.css';\n\nconst KEY = '115673062d9a805a3df250beb0ca2927';\n\nconst Cast = () => {\n    const { moviesId } = useParams();\n    const [casts, setCasts] = useState(null);\n\n    useEffect(() => {\n        async function fetchData() {\n            return await fetch(`https://api.themoviedb.org/3/movie/${moviesId}/credits?api_key=${KEY}`)\n            .then(resp => resp.json())\n            .then(data => {\n                setCasts(data.cast);\n            })\n              .catch(erorr => alert(erorr));\n          }\n          fetchData();\n    }, [moviesId]);\n\n\n    return (\n        <div>\n           { casts &&\n            <ul className={css.actorList}>\n                {\n                  casts.map(item => {\n                    let image;\n                    if(item.profile_path) {\n                        image = `https://image.tmdb.org/t/p/w500/${item.profile_path}`;\n                    }\n                    return(\n                        <li key={item.id} className={css.itemActor}>\n                            <div className={css.imgNot}>\n                            <img src={image} alt={item.original_name} className={css.imgActor}/>\n                            </div>\n                       \n                    <p>{item.original_name}</p>\n                    <p>Character: {item.character}</p>\n                        </li>\n                    )\n                  })  \n                }\n            </ul>}\n        </div>\n    )\n}\n\nexport default Cast;\n\nCast.propTypes = {\n    moviesId: PropTypes.number,\n    state: PropTypes.arrayOf(PropTypes.exact({\n        casts: PropTypes.array\n    }))\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["KEY","moviesId","useParams","useState","casts","setCasts","useEffect","fetch","then","resp","json","data","cast","catch","erorr","alert","fetchData","className","css","map","item","image","profile_path","src","alt","original_name","character","id","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}